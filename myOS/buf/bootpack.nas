[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_init_gdtidt
	EXTERN	_init_pic
	EXTERN	_io_sti
	EXTERN	_fifo32_init
	EXTERN	_init_pit
	EXTERN	_init_keyboard
	EXTERN	_enable_mouse
	EXTERN	_io_out8
	EXTERN	_memtest
	EXTERN	_memman_init
	EXTERN	_memman_free
	EXTERN	_init_palette
	EXTERN	_shtctl_init
	EXTERN	_task_init
	EXTERN	_task_run
	EXTERN	_sheet_alloc
	EXTERN	_memman_alloc_4k
	EXTERN	_sheet_setbuf
	EXTERN	_init_screen8
	EXTERN	_make_window8
	EXTERN	_make_textbox8
	EXTERN	_task_alloc
	EXTERN	_console_task
	EXTERN	_timer_alloc
	EXTERN	_timer_init
	EXTERN	_timer_settime
	EXTERN	_init_mouse_cursor8
	EXTERN	_sheet_slide
	EXTERN	_sheet_updown
	EXTERN	_fifo32_put
	EXTERN	_fifo32_status
	EXTERN	_io_cli
	EXTERN	_fifo32_get
	EXTERN	_boxfill8
	EXTERN	_sheet_refresh
	EXTERN	_mouse_decode
	EXTERN	_keytable1.1
	EXTERN	_putfonts8_asc_sht
	EXTERN	_wait_KBC_sendready
	EXTERN	_cons_putstr0
	EXTERN	_asm_end_app
	EXTERN	_make_wtitle8
	EXTERN	_keytable0.0
	EXTERN	_task_sleep
	EXTERN	_io_stihlt
[FILE "bootpack.c"]
[SECTION .data]
_keytable0.0:
	DB	0
	DB	0
	DB	49
	DB	50
	DB	51
	DB	52
	DB	53
	DB	54
	DB	55
	DB	56
	DB	57
	DB	48
	DB	45
	DB	94
	DB	0
	DB	0
	DB	113
	DB	119
	DB	101
	DB	114
	DB	116
	DB	121
	DB	117
	DB	105
	DB	111
	DB	112
	DB	64
	DB	91
	DB	0
	DB	0
	DB	97
	DB	115
	DB	100
	DB	102
	DB	103
	DB	104
	DB	106
	DB	107
	DB	108
	DB	59
	DB	58
	DB	0
	DB	0
	DB	93
	DB	122
	DB	120
	DB	99
	DB	118
	DB	98
	DB	110
	DB	109
	DB	44
	DB	46
	DB	47
	DB	0
	DB	42
	DB	92
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	55
	DB	56
	DB	57
	DB	45
	DB	52
	DB	53
	DB	54
	DB	43
	DB	49
	DB	50
	DB	51
	DB	48
	DB	46
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	92
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	92
	DB	0
	DB	0
_keytable1.1:
	DB	0
	DB	0
	DB	33
	DB	34
	DB	35
	DB	36
	DB	37
	DB	38
	DB	39
	DB	40
	DB	41
	DB	126
	DB	61
	DB	126
	DB	0
	DB	0
	DB	81
	DB	87
	DB	69
	DB	82
	DB	84
	DB	89
	DB	85
	DB	73
	DB	79
	DB	80
	DB	96
	DB	123
	DB	0
	DB	0
	DB	65
	DB	83
	DB	68
	DB	70
	DB	71
	DB	72
	DB	74
	DB	75
	DB	76
	DB	43
	DB	42
	DB	0
	DB	0
	DB	125
	DB	90
	DB	88
	DB	67
	DB	86
	DB	66
	DB	78
	DB	77
	DB	60
	DB	62
	DB	63
	DB	0
	DB	42
	DB	0
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	55
	DB	56
	DB	57
	DB	45
	DB	52
	DB	53
	DB	54
	DB	43
	DB	49
	DB	50
	DB	51
	DB	48
	DB	46
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	95
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	124
	DB	0
	DB	0
LC0:
	DB	"console",0x00
LC1:
	DB	"task_a",0x00
LC3:
	DB	0x0A,"Berak(key) :",0x0A,0x00
LC2:
	DB	" ",0x00
[SECTION .text]
	GLOBAL	_HariMain
_HariMain:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EBX,DWORD [-44+EBP]
	SUB	ESP,1740
	MOV	DWORD [-1700+EBP],0
	MOV	DWORD [-1704+EBP],0
	MOV	AL,BYTE [4081]
	SAR	AL,4
	MOV	EDX,EAX
	AND	EDX,7
	MOV	DWORD [-1708+EBP],EDX
	MOV	DWORD [-1712+EBP],-1
	CALL	_init_gdtidt
	CALL	_init_pic
	CALL	_io_sti
	LEA	EAX,DWORD [-636+EBP]
	PUSH	0
	PUSH	EAX
	PUSH	128
	PUSH	EBX
	CALL	_fifo32_init
	CALL	_init_pit
	PUSH	256
	PUSH	EBX
	CALL	_init_keyboard
	LEA	EAX,DWORD [-652+EBP]
	PUSH	EAX
	PUSH	512
	PUSH	EBX
	CALL	_enable_mouse
	ADD	ESP,36
	PUSH	248
	PUSH	33
	CALL	_io_out8
	PUSH	239
	PUSH	161
	CALL	_io_out8
	PUSH	-1073741825
	PUSH	4194304
	CALL	_memtest
	PUSH	3932160
	MOV	DWORD [-1696+EBP],EAX
	CALL	_memman_init
	PUSH	647168
	PUSH	4096
	PUSH	3932160
	CALL	_memman_free
	MOV	EAX,DWORD [-1696+EBP]
	ADD	ESP,40
	SUB	EAX,4194304
	PUSH	EAX
	PUSH	4194304
	PUSH	3932160
	CALL	_memman_free
	CALL	_init_palette
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	DWORD [4088]
	PUSH	3932160
	CALL	_shtctl_init
	PUSH	3932160
	MOV	ESI,EAX
	CALL	_task_init
	ADD	ESP,32
	MOV	DWORD [-1736+EBP],EAX
	MOV	DWORD [-20+EBP],EAX
	PUSH	0
	PUSH	1
	PUSH	EAX
	CALL	_task_run
	PUSH	ESI
	CALL	_sheet_alloc
	MOVSX	EBX,WORD [4086]
	MOV	DWORD [-1724+EBP],EAX
	MOVSX	EAX,WORD [4084]
	IMUL	EAX,EBX
	PUSH	EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	PUSH	-1
	MOV	EBX,EAX
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EBX
	PUSH	DWORD [-1724+EBP]
	CALL	_sheet_setbuf
	ADD	ESP,44
	MOVSX	EAX,WORD [4086]
	PUSH	EAX
	MOVSX	EAX,WORD [4084]
	PUSH	EAX
	PUSH	EBX
	CALL	_init_screen8
	PUSH	ESI
	CALL	_sheet_alloc
	PUSH	168960
	PUSH	3932160
	MOV	DWORD [-1732+EBP],EAX
	CALL	_memman_alloc_4k
	PUSH	-1
	PUSH	165
	MOV	DWORD [-1720+EBP],EAX
	PUSH	256
	PUSH	EAX
	PUSH	DWORD [-1732+EBP]
	CALL	_sheet_setbuf
	ADD	ESP,44
	PUSH	0
	PUSH	LC0
	PUSH	165
	PUSH	256
	PUSH	DWORD [-1720+EBP]
	CALL	_make_window8
	PUSH	0
	PUSH	128
	PUSH	240
	PUSH	28
	PUSH	8
	PUSH	DWORD [-1732+EBP]
	CALL	_make_textbox8
	ADD	ESP,44
	CALL	_task_alloc
	PUSH	65536
	PUSH	3932160
	MOV	DWORD [-1740+EBP],EAX
	CALL	_memman_alloc_4k
	MOV	EBX,DWORD [-1732+EBP]
	MOV	EDX,DWORD [-1740+EBP]
	ADD	EAX,65524
	MOV	DWORD [100+EDX],EAX
	MOV	DWORD [76+EDX],_console_task
	MOV	DWORD [116+EDX],8
	MOV	DWORD [120+EDX],16
	MOV	DWORD [124+EDX],8
	MOV	DWORD [128+EDX],8
	MOV	DWORD [132+EDX],8
	MOV	DWORD [136+EDX],8
	MOV	DWORD [4+EAX],EBX
	LEA	EBX,DWORD [-44+EBP]
	MOV	EAX,DWORD [100+EDX]
	MOV	EDX,DWORD [-1696+EBP]
	MOV	DWORD [8+EAX],EDX
	PUSH	2
	PUSH	2
	PUSH	DWORD [-1740+EBP]
	CALL	_task_run
	PUSH	ESI
	CALL	_sheet_alloc
	PUSH	7488
	PUSH	3932160
	MOV	EDI,EAX
	CALL	_memman_alloc_4k
	ADD	ESP,32
	PUSH	-1
	MOV	DWORD [-1716+EBP],EAX
	PUSH	52
	PUSH	144
	PUSH	EAX
	PUSH	EDI
	CALL	_sheet_setbuf
	PUSH	1
	PUSH	LC1
	PUSH	52
	PUSH	144
	PUSH	DWORD [-1716+EBP]
	CALL	_make_window8
	ADD	ESP,40
	PUSH	7
	PUSH	16
	PUSH	128
	PUSH	28
	PUSH	8
	PUSH	EDI
	CALL	_make_textbox8
	MOV	DWORD [-1688+EBP],8
	MOV	DWORD [-1692+EBP],7
	CALL	_timer_alloc
	PUSH	1
	PUSH	EBX
	LEA	EBX,DWORD [-1676+EBP]
	PUSH	EAX
	MOV	DWORD [-1744+EBP],EAX
	CALL	_timer_init
	ADD	ESP,36
	PUSH	50
	PUSH	DWORD [-1744+EBP]
	CALL	_timer_settime
	PUSH	ESI
	CALL	_sheet_alloc
	PUSH	99
	PUSH	16
	PUSH	10
	MOV	DWORD [-1728+EBP],EAX
	PUSH	EBX
	PUSH	EAX
	CALL	_sheet_setbuf
	ADD	ESP,32
	PUSH	99
	PUSH	EBX
	MOV	EBX,2
	CALL	_init_mouse_cursor8
	MOVSX	EAX,WORD [4084]
	LEA	ECX,DWORD [-16+EAX]
	MOV	EAX,ECX
	CDQ
	IDIV	EBX
	MOV	DWORD [-1680+EBP],EAX
	MOVSX	EAX,WORD [4086]
	PUSH	0
	LEA	ECX,DWORD [-44+EAX]
	PUSH	0
	MOV	EAX,ECX
	CDQ
	IDIV	EBX
	PUSH	DWORD [-1724+EBP]
	MOV	DWORD [-1684+EBP],EAX
	LEA	EBX,DWORD [-76+EBP]
	CALL	_sheet_slide
	PUSH	4
	PUSH	32
	PUSH	DWORD [-1732+EBP]
	CALL	_sheet_slide
	ADD	ESP,32
	PUSH	56
	PUSH	8
	PUSH	EDI
	CALL	_sheet_slide
	PUSH	DWORD [-1684+EBP]
	PUSH	DWORD [-1680+EBP]
	PUSH	DWORD [-1728+EBP]
	CALL	_sheet_slide
	PUSH	0
	PUSH	DWORD [-1724+EBP]
	CALL	_sheet_updown
	ADD	ESP,32
	PUSH	1
	PUSH	DWORD [-1732+EBP]
	CALL	_sheet_updown
	PUSH	2
	PUSH	EDI
	CALL	_sheet_updown
	PUSH	3
	PUSH	DWORD [-1728+EBP]
	CALL	_sheet_updown
	PUSH	237
	PUSH	EBX
	CALL	_fifo32_put
	ADD	ESP,32
	PUSH	DWORD [-1708+EBP]
	PUSH	EBX
	CALL	_fifo32_put
	POP	ECX
	POP	EBX
L2:
	LEA	EBX,DWORD [-76+EBP]
	PUSH	EBX
	CALL	_fifo32_status
	POP	EDX
	TEST	EAX,EAX
	JLE	L5
	CMP	DWORD [-1712+EBP],0
	JS	L56
L5:
	LEA	EBX,DWORD [-44+EBP]
	CALL	_io_cli
	PUSH	EBX
	CALL	_fifo32_status
	POP	ESI
	TEST	EAX,EAX
	JE	L57
	PUSH	EBX
	CALL	_fifo32_get
	MOV	ESI,EAX
	CALL	_io_sti
	POP	ECX
	LEA	EAX,DWORD [-256+ESI]
	CMP	EAX,255
	JBE	L58
	LEA	EAX,DWORD [-512+ESI]
	CMP	EAX,255
	JBE	L59
	CMP	ESI,1
	JG	L2
	TEST	ESI,ESI
	JE	L49
	PUSH	0
	PUSH	EBX
	PUSH	DWORD [-1744+EBP]
	CALL	_timer_init
	ADD	ESP,12
	CMP	DWORD [-1692+EBP],0
	JS	L51
	MOV	DWORD [-1692+EBP],0
L51:
	PUSH	50
	PUSH	DWORD [-1744+EBP]
	CALL	_timer_settime
	POP	EAX
	POP	EDX
	CMP	DWORD [-1692+EBP],0
	JS	L2
	MOV	EAX,DWORD [-1688+EBP]
	PUSH	43
	ADD	EAX,7
	PUSH	EAX
	PUSH	28
	PUSH	DWORD [-1688+EBP]
	MOVZX	EAX,BYTE [-1692+EBP]
	PUSH	EAX
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [EDI]
	CALL	_boxfill8
	MOV	EAX,DWORD [-1688+EBP]
	PUSH	44
	ADD	EAX,8
	PUSH	EAX
	PUSH	28
	PUSH	DWORD [-1688+EBP]
	PUSH	EDI
	CALL	_sheet_refresh
	ADD	ESP,48
	JMP	L2
L49:
	PUSH	1
	PUSH	EBX
	PUSH	DWORD [-1744+EBP]
	CALL	_timer_init
	ADD	ESP,12
	CMP	DWORD [-1692+EBP],0
	JS	L51
	MOV	DWORD [-1692+EBP],7
	JMP	L51
L59:
	MOV	EDX,ESI
	MOVZX	EAX,DL
	PUSH	EAX
	LEA	EAX,DWORD [-652+EBP]
	PUSH	EAX
	CALL	_mouse_decode
	POP	ECX
	POP	EBX
	TEST	EAX,EAX
	JE	L2
	MOV	EBX,DWORD [-644+EBP]
	MOV	EAX,DWORD [-648+EBP]
	ADD	DWORD [-1684+EBP],EBX
	ADD	DWORD [-1680+EBP],EAX
	JS	L60
L42:
	CMP	DWORD [-1684+EBP],0
	JS	L61
L43:
	MOVSX	EAX,WORD [4084]
	DEC	EAX
	CMP	DWORD [-1680+EBP],EAX
	JLE	L44
	MOV	DWORD [-1680+EBP],EAX
L44:
	MOVSX	EAX,WORD [4086]
	DEC	EAX
	CMP	DWORD [-1684+EBP],EAX
	JLE	L45
	MOV	DWORD [-1684+EBP],EAX
L45:
	PUSH	DWORD [-1684+EBP]
	PUSH	DWORD [-1680+EBP]
	PUSH	DWORD [-1728+EBP]
	CALL	_sheet_slide
	ADD	ESP,12
	TEST	DWORD [-640+EBP],1
	JE	L2
	MOV	EAX,DWORD [-1684+EBP]
	SUB	EAX,8
	PUSH	EAX
	MOV	EAX,DWORD [-1680+EBP]
	SUB	EAX,80
	PUSH	EAX
	PUSH	EDI
	CALL	_sheet_slide
	ADD	ESP,12
	JMP	L2
L61:
	MOV	DWORD [-1684+EBP],0
	JMP	L43
L60:
	MOV	DWORD [-1680+EBP],0
	JMP	L42
L58:
	CMP	ESI,383
	JG	L9
	TEST	DWORD [-1708+EBP],4
	JNE	L54
	CMP	DWORD [-1704+EBP],0
	JE	L11
L10:
	MOV	AL,BYTE [_keytable1.1-256+ESI]
L55:
	MOV	BYTE [-124+EBP],AL
L14:
	MOV	AL,BYTE [-124+EBP]
	TEST	AL,AL
	JE	L15
	CMP	DWORD [-1700+EBP],0
	JNE	L16
	CMP	DWORD [-1688+EBP],127
	JG	L15
	PUSH	1
	LEA	EAX,DWORD [-124+EBP]
	PUSH	EAX
	PUSH	7
	PUSH	0
	PUSH	28
	PUSH	DWORD [-1688+EBP]
	PUSH	EDI
	MOV	BYTE [-123+EBP],0
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	ADD	DWORD [-1688+EBP],8
L15:
	CMP	ESI,270
	JE	L62
L19:
	CMP	ESI,284
	JE	L63
L23:
	CMP	ESI,271
	JE	L64
L25:
	CMP	ESI,302
	JE	L65
L28:
	CMP	ESI,298
	JE	L66
L29:
	CMP	ESI,310
	JE	L67
L30:
	CMP	ESI,426
	JE	L68
L31:
	CMP	ESI,438
	JE	L69
L32:
	CMP	ESI,314
	JE	L70
L33:
	CMP	ESI,325
	JE	L71
L34:
	CMP	ESI,326
	JE	L72
L35:
	CMP	ESI,506
	JE	L73
L36:
	CMP	ESI,510
	JE	L74
L37:
	CMP	DWORD [-1692+EBP],0
	JS	L38
	MOV	EAX,DWORD [-1688+EBP]
	PUSH	43
	ADD	EAX,7
	PUSH	EAX
	PUSH	28
	PUSH	DWORD [-1688+EBP]
	MOVZX	EAX,BYTE [-1692+EBP]
	PUSH	EAX
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [EDI]
	CALL	_boxfill8
	ADD	ESP,28
L38:
	MOV	EAX,DWORD [-1688+EBP]
	PUSH	44
	ADD	EAX,8
	PUSH	EAX
	PUSH	28
	PUSH	DWORD [-1688+EBP]
	PUSH	EDI
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L2
L74:
	CALL	_wait_KBC_sendready
	PUSH	DWORD [-1712+EBP]
	PUSH	96
	CALL	_io_out8
	POP	ESI
	POP	EAX
	JMP	L37
L73:
	MOV	DWORD [-1712+EBP],-1
	JMP	L36
L72:
	PUSH	237
	LEA	EBX,DWORD [-76+EBP]
	PUSH	EBX
	XOR	DWORD [-1708+EBP],1
	CALL	_fifo32_put
	PUSH	DWORD [-1708+EBP]
	PUSH	EBX
	CALL	_fifo32_put
	ADD	ESP,16
	JMP	L35
L71:
	PUSH	237
	LEA	EBX,DWORD [-76+EBP]
	PUSH	EBX
	XOR	DWORD [-1708+EBP],2
	CALL	_fifo32_put
	PUSH	DWORD [-1708+EBP]
	PUSH	EBX
	CALL	_fifo32_put
	ADD	ESP,16
	JMP	L34
L70:
	PUSH	237
	LEA	EBX,DWORD [-76+EBP]
	PUSH	EBX
	XOR	DWORD [-1708+EBP],4
	CALL	_fifo32_put
	PUSH	DWORD [-1708+EBP]
	PUSH	EBX
	CALL	_fifo32_put
	ADD	ESP,16
	JMP	L33
L69:
	AND	DWORD [-1704+EBP],-3
	JMP	L32
L68:
	AND	DWORD [-1704+EBP],-2
	JMP	L31
L67:
	OR	DWORD [-1704+EBP],2
	JMP	L30
L66:
	OR	DWORD [-1704+EBP],1
	JMP	L29
L65:
	CMP	DWORD [-1704+EBP],0
	JE	L28
	MOV	EBX,DWORD [-1740+EBP]
	CMP	DWORD [52+EBX],0
	JE	L28
	PUSH	LC3
	PUSH	DWORD [4076]
	CALL	_cons_putstr0
	CALL	_io_cli
	MOV	EAX,EBX
	ADD	EAX,48
	MOV	DWORD [84+EBX],EAX
	MOV	DWORD [76+EBX],_asm_end_app
	CALL	_io_sti
	POP	EAX
	POP	EDX
	JMP	L28
L64:
	CMP	DWORD [-1700+EBP],0
	JNE	L26
	PUSH	0
	PUSH	LC1
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [-1716+EBP]
	MOV	DWORD [-1700+EBP],1
	CALL	_make_wtitle8
	MOV	EBX,DWORD [-1732+EBP]
	PUSH	1
	PUSH	LC0
	PUSH	DWORD [4+EBX]
	PUSH	DWORD [-1720+EBP]
	CALL	_make_wtitle8
	MOV	EAX,DWORD [-1688+EBP]
	ADD	ESP,32
	ADD	EAX,7
	MOV	DWORD [-1692+EBP],-1
	PUSH	43
	PUSH	EAX
	PUSH	28
	PUSH	DWORD [-1688+EBP]
	PUSH	7
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [EDI]
	CALL	_boxfill8
	MOV	EAX,DWORD [-1740+EBP]
	PUSH	2
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	ADD	ESP,36
L27:
	PUSH	21
	PUSH	DWORD [4+EDI]
	PUSH	0
	PUSH	0
	PUSH	EDI
	CALL	_sheet_refresh
	MOV	EDX,DWORD [-1732+EBP]
	PUSH	21
	PUSH	DWORD [4+EDX]
	PUSH	0
	PUSH	0
	PUSH	EDX
	CALL	_sheet_refresh
	ADD	ESP,40
	JMP	L25
L26:
	PUSH	1
	PUSH	LC1
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [-1716+EBP]
	MOV	DWORD [-1700+EBP],0
	CALL	_make_wtitle8
	MOV	EAX,DWORD [-1732+EBP]
	PUSH	0
	PUSH	LC0
	PUSH	DWORD [4+EAX]
	PUSH	DWORD [-1720+EBP]
	CALL	_make_wtitle8
	MOV	EAX,DWORD [-1740+EBP]
	ADD	ESP,32
	ADD	EAX,16
	MOV	DWORD [-1692+EBP],0
	PUSH	3
	PUSH	EAX
	CALL	_fifo32_put
	POP	ECX
	POP	EBX
	JMP	L27
L63:
	CMP	DWORD [-1700+EBP],0
	JE	L23
	MOV	EAX,DWORD [-1740+EBP]
	PUSH	266
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	POP	EAX
	POP	EDX
	JMP	L23
L62:
	CMP	DWORD [-1700+EBP],0
	JNE	L20
	CMP	DWORD [-1688+EBP],8
	JLE	L19
	PUSH	1
	PUSH	LC2
	PUSH	7
	PUSH	0
	PUSH	28
	PUSH	DWORD [-1688+EBP]
	PUSH	EDI
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	SUB	DWORD [-1688+EBP],8
	JMP	L19
L20:
	MOV	EAX,DWORD [-1740+EBP]
	PUSH	264
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	POP	ECX
	POP	EBX
	JMP	L19
L16:
	MOVSX	EAX,AL
	ADD	EAX,256
	PUSH	EAX
	MOV	EAX,DWORD [-1740+EBP]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_put
	POP	EAX
	POP	EDX
	JMP	L15
L11:
	MOV	AL,BYTE [_keytable0.0-256+ESI]
	JMP	L55
L54:
	CMP	DWORD [-1704+EBP],0
	JE	L10
	JMP	L11
L9:
	MOV	BYTE [-124+EBP],0
	JMP	L14
L57:
	PUSH	DWORD [-1736+EBP]
	CALL	_task_sleep
	CALL	_io_stihlt
	POP	EBX
	JMP	L2
L56:
	PUSH	EBX
	CALL	_fifo32_get
	MOV	DWORD [-1712+EBP],EAX
	CALL	_wait_KBC_sendready
	PUSH	DWORD [-1712+EBP]
	PUSH	96
	CALL	_io_out8
	ADD	ESP,12
	JMP	L5
