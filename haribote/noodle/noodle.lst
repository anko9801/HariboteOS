     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	__alloca
     7 00000000                                 	EXTERN	_api_initmalloc
     8 00000000                                 	EXTERN	_api_openwin
     9 00000000                                 	EXTERN	_api_alloctimer
    10 00000000                                 	EXTERN	_api_inittimer
    11 00000000                                 	EXTERN	_sprintf
    12 00000000                                 	EXTERN	_api_boxfillwin
    13 00000000                                 	EXTERN	_api_putstrwin
    14 00000000                                 	EXTERN	_api_settimer
    15 00000000                                 	EXTERN	_api_getkey
    16 00000000                                 	EXTERN	_api_closewin
    17 00000000                                 	EXTERN	_api_end
    18 00000000                                 [FILE "noodle.c"]
    19                                          [SECTION .data]
    20 00000000                                 LC0:
    21 00000000 6E 6F 6F 64 6C 65 00            	DB	"noodle",0x00
    22 00000007                                 LC1:
    23 00000007 25 35 64 3A 25 30 32 64 3A 25   	DB	"%5d:%02d:%02d",0x00
       00000011 30 32 64 00 
    24                                          [SECTION .text]
    25 00000000                                 	GLOBAL	_HariMain
    26 00000000                                 _HariMain:
    27 00000000 55                              	PUSH	EBP
    28 00000001 B8 0000FA1C                     	MOV	EAX,64028
    29 00000006 89 E5                           	MOV	EBP,ESP
    30 00000008 57                              	PUSH	EDI
    31 00000009 56                              	PUSH	ESI
    32 0000000A 31 FF                           	XOR	EDI,EDI
    33 0000000C 53                              	PUSH	EBX
    34 0000000D E8 [00000000]                   	CALL	__alloca
    35 00000012 C7 85 FFFF05DC 00000000         	MOV	DWORD [-64036+EBP],0
    36 0000001C C7 85 FFFF05D8 00000000         	MOV	DWORD [-64040+EBP],0
    37 00000026 E8 [00000000]                   	CALL	_api_initmalloc
    38 0000002B 8D 85 FFFF05F4                  	LEA	EAX,DWORD [-64012+EBP]
    39 00000031 68 [00000000]                   	PUSH	LC0
    40 00000036 6A FF                           	PUSH	-1
    41 00000038 6A 64                           	PUSH	100
    42 0000003A 68 000000A0                     	PUSH	160
    43 0000003F 50                              	PUSH	EAX
    44 00000040 E8 [00000000]                   	CALL	_api_openwin
    45 00000045 89 C6                           	MOV	ESI,EAX
    46 00000047 E8 [00000000]                   	CALL	_api_alloctimer
    47 0000004C 68 00000080                     	PUSH	128
    48 00000051 50                              	PUSH	EAX
    49 00000052 89 85 FFFF05E0                  	MOV	DWORD [-64032+EBP],EAX
    50 00000058 E8 [00000000]                   	CALL	_api_inittimer
    51 0000005D 83 C4 1C                        	ADD	ESP,28
    52 00000060                                 L2:
    53 00000060 FF B5 FFFF05DC                  	PUSH	DWORD [-64036+EBP]
    54 00000066 57                              	PUSH	EDI
    55 00000067 8D 9D FFFF05E4                  	LEA	EBX,DWORD [-64028+EBP]
    56 0000006D FF B5 FFFF05D8                  	PUSH	DWORD [-64040+EBP]
    57 00000073 68 [00000007]                   	PUSH	LC1
    58 00000078 53                              	PUSH	EBX
    59 00000079 E8 [00000000]                   	CALL	_sprintf
    60 0000007E 6A 07                           	PUSH	7
    61 00000080 6A 29                           	PUSH	41
    62 00000082 6A 73                           	PUSH	115
    63 00000084 6A 1B                           	PUSH	27
    64 00000086 6A 1C                           	PUSH	28
    65 00000088 56                              	PUSH	ESI
    66 00000089 E8 [00000000]                   	CALL	_api_boxfillwin
    67 0000008E 83 C4 2C                        	ADD	ESP,44
    68 00000091 53                              	PUSH	EBX
    69 00000092 6A 0B                           	PUSH	11
    70 00000094 6A 00                           	PUSH	0
    71 00000096 6A 1B                           	PUSH	27
    72 00000098 6A 1C                           	PUSH	28
    73 0000009A 56                              	PUSH	ESI
    74 0000009B E8 [00000000]                   	CALL	_api_putstrwin
    75 000000A0 6A 64                           	PUSH	100
    76 000000A2 FF B5 FFFF05E0                  	PUSH	DWORD [-64032+EBP]
    77 000000A8 E8 [00000000]                   	CALL	_api_settimer
    78 000000AD 83 C4 20                        	ADD	ESP,32
    79 000000B0 6A 01                           	PUSH	1
    80 000000B2 E8 [00000000]                   	CALL	_api_getkey
    81 000000B7 5A                              	POP	EDX
    82 000000B8 83 C0 80                        	ADD	EAX,-128
    83 000000BB 75 2C                           	JNE	L3
    84 000000BD FF 85 FFFF05DC                  	INC	DWORD [-64036+EBP]
    85 000000C3 83 BD FFFF05DC 3C               	CMP	DWORD [-64036+EBP],60
    86 000000CA 75 94                           	JNE	L2
    87 000000CC 47                              	INC	EDI
    88 000000CD C7 85 FFFF05DC 00000000         	MOV	DWORD [-64036+EBP],0
    89 000000D7 83 FF 3C                        	CMP	EDI,60
    90 000000DA 75 84                           	JNE	L2
    91 000000DC 31 FF                           	XOR	EDI,EDI
    92 000000DE FF 85 FFFF05D8                  	INC	DWORD [-64040+EBP]
    93 000000E4 E9 FFFFFF77                     	JMP	L2
    94 000000E9                                 L3:
    95 000000E9 56                              	PUSH	ESI
    96 000000EA E8 [00000000]                   	CALL	_api_closewin
    97 000000EF E8 [00000000]                   	CALL	_api_end
    98 000000F4 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
    99 000000F7 5B                              	POP	EBX
   100 000000F8 5E                              	POP	ESI
   101 000000F9 5F                              	POP	EDI
   102 000000FA 5D                              	POP	EBP
   103 000000FB C3                              	RET
